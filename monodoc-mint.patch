--- monodoc-1.2.4/class/Makefile.am.orig	2007-04-20 06:34:14.000000000 +0200
+++ monodoc-1.2.4/class/Makefile.am	2007-05-16 20:38:44.684151682 +0200
@@ -21,7 +21,7 @@
 netdocs: netdocs.tree
 
 netdocs.tree netdocs.zip: $(srcdir)/*/en/*/*.xml $(srcdir)/*/en/*.xml
-	mono --debug $(ASSEMBLER) -o netdocs			\
+	$(RUNTIME) $(RDEBUG) $(ASSEMBLER) -o netdocs			\
 		--ecma $(srcdir)/corlib/en/			\
 		--ecma $(srcdir)/System/en/			\
 		--ecma $(srcdir)/System.XML/en/			\
@@ -39,31 +39,31 @@
 # All the Mono.* namespaces go into a single package
 #
 Mono.tree Mono.zip: $(srcdir)/Mono.Cairo/en/*/*.xml  $(srcdir)/Mono.GetOptions/en/*/*.xml $(srcdir)/Mono.Posix/en/*/*.xml $(srcdir)/Mono.Security/en/*/*.xml $(srcdir)/Mono.Security.Win32/en/*/*.xml $(srcdir)/Commons.Xml.Relaxng/en/*/*.xml $(srcdir)/Mono.Addins/en/*/*.xml
-	mono --debug $(ASSEMBLER) --ecma $(srcdir)/Mono.Cairo/en --ecma $(srcdir)/Mono.GetOptions/en --ecma $(srcdir)/Mono.Posix/en --ecma $(srcdir)/Mono.Security.Win32/en/ --ecma $(srcdir)/Mono.Security/en/ --ecma $(srcdir)/Commons.Xml.Relaxng/en/ --ecma $(srcdir)/Mono.Addins/en/ -o Mono
+	$(RUNTIME) $(RDEBUG) $(ASSEMBLER) --ecma $(srcdir)/Mono.Cairo/en --ecma $(srcdir)/Mono.GetOptions/en --ecma $(srcdir)/Mono.Posix/en --ecma $(srcdir)/Mono.Security.Win32/en/ --ecma $(srcdir)/Mono.Security/en/ --ecma $(srcdir)/Commons.Xml.Relaxng/en/ --ecma $(srcdir)/Mono.Addins/en/ -o Mono
 
 #
 # All the Novell namespaces we handle go into a single file (one for now).
 #
 Novell.tree Novell.zip: $(srcdir)/Novell.Directory.Ldap/en/*/*.xml
-	mono --debug $(ASSEMBLER) --ecma $(srcdir)/Novell.Directory.Ldap/en/ -o Novell
+	$(RUNTIME) $(RDEBUG) $(ASSEMBLER) --ecma $(srcdir)/Novell.Directory.Ldap/en/ -o Novell
 
 #
 # These are the NUnit documents, not sure why we have these, if NUnit is well documented
 #
 nunit-docs.tree nunit-docs.zip: $(srcdir)/nunit/en/*/*.xml $(srcdir)/nunit/en/*.xml
-	mono --debug $(ASSEMBLER) --ecma $(srcdir)/nunit/en/ -o nunit-docs
+	$(RUNTIME) $(RDEBUG) $(ASSEMBLER) --ecma $(srcdir)/nunit/en/ -o nunit-docs
 
 #
 # Generation of C# errors, from the mcs source tree
 #
 cs-errors.tree cs-errors.zip: $(srcdir)/cs-errors.config
-	mono --debug $(ASSEMBLER) --error $(srcdir)/cs-errors.config -o cs-errors
+	$(RUNTIME) $(RDEBUG) $(ASSEMBLER) --error $(srcdir)/cs-errors.config -o cs-errors
 
 #
 # The ECMA C# specification, from Jon Jagger.
 #
 ecma334.tree ecma334.zip: $(srcdir)/../ecma334/*
-	mono --debug $(ASSEMBLER) --ecmaspec $(srcdir)/../ecma334 -o ecma334
+	$(RUNTIME) $(RDEBUG) $(ASSEMBLER) --ecmaspec $(srcdir)/../ecma334 -o ecma334
 
 CLEANFILES = \
 	ecma334.tree ecma334.zip 	\
@@ -96,10 +96,10 @@
 	System.Xml:System.XML
 
 UPDATE_COMMAND = \
-	mono --debug ../tools/monodocer1.exe -pretty -overrides -ignore_extra_docs  \
+	$(RUNTIME) $(RDEBUG) ../tools/monodocer1.exe -pretty -overrides -ignore_extra_docs  \
 		-assembly:@prefix@/lib/mono/1.0/$(1).dll                                  \
 		-path:./$(2)/en || exit 1;                                                \
-	mono --debug ../tools/monodocer.exe -pretty -overrides -since:".NET 2.0"    \
+	$(RUNTIME) $(RDEBUG) ../tools/monodocer.exe -pretty -overrides -since:".NET 2.0"    \
 		-assembly:@prefix@/lib/mono/2.0/$(1).dll                                  \
 		-path:./$(2)/en || exit 1;
 
@@ -110,7 +110,7 @@
 		if test -z "$$d" ; then d="$$a"; fi; \
 		$(call UPDATE_COMMAND,$$a,$$d)
 	done
-	mono --debug ../tools/monodocer.exe -pretty -overrides \
+	$(RUNTIME) $(RDEBUG) ../tools/monodocer.exe -pretty -overrides \
 		-assembly:@prefix@/lib/mono/1.0/nunit.framework.dll -path:./nunit/en
 
 update-dir:
--- monodoc-1.1.9/configure.in.orig	2005-09-08 20:14:32.000000000 +0200
+++ monodoc-1.1.9/configure.in	2005-09-14 13:50:15.000000000 +0200
@@ -12,6 +12,11 @@
 
 AC_PATH_PROG(GACUTIL, gacutil, no)
-AC_PATH_PROG(RUNTIME, mono, no)
+AC_PATH_PROGS(RUNTIME, [mono mint], no)
+RDEBUG=
+if test "x$RUNTIME" = "x/usr/bin/mono" ; then
+        RDEBUG=--debug
+fi
+AC_SUBST(RDEBUG)
 AC_PATH_PROG(CSC, mcs, no)
 
 
@@ -20,12 +23,12 @@
 fi
 AC_SUBST(GACUTIL)
 
-if test "x$GACUTIL" = "xno" ; then
+if test "x$RUNTIME" = "xno" ; then
         AC_MSG_ERROR([No mono found])
 fi
 
 CS="C#"
-if test "x$MCS" = "xno"  ; then
+if test "x$CSC" = "xno"  ; then
 	AC_MSG_ERROR([No $CS compiler found])
 fi
 
--- monodoc-1.1.9/monodoc.in.orig	2005-05-01 19:48:01.000000000 +0200
+++ monodoc-1.1.9/monodoc.in	2005-09-14 14:17:42.000000000 +0200
@@ -13,22 +13,22 @@
 	;;
 
     monodocer)
-	exec mono $monodocdir/monodocer.exe $*
+	exec @RUNTIME@ $monodocdir/monodocer.exe $*
 	;;
 
     monodocs2html)
-	exec mono $monodocdir/monodocs2html.exe $*
+	exec @RUNTIME@ $monodocdir/monodocs2html.exe $*
 	;;
 
     monodocs2slashdoc)
-	exec mono $monodocdir/monodocs2slashdoc.exe $*
+	exec @RUNTIME@ $monodocdir/monodocs2slashdoc.exe $*
 	;;
 esac
 
 case x$1 in
     x--assemble)
 	shift;
-	exec mono $monodocdir/assembler.exe "$@"
+	exec @RUNTIME@ $monodocdir/assembler.exe "$@"
 	;;
     x--get-sourcesdir)
 	echo $monodocdir/sources
@@ -36,7 +36,7 @@
 	;;
     x--normalize)
 	shift;
-	exec mono $monodocdir/normalize.exe "$@"
+	exec @RUNTIME@ $monodocdir/normalize.exe "$@"
 	;;
     x--update)
 	echo '--update deprecated;  Please use "monodocer" instead.'
@@ -44,12 +44,12 @@
 	;;
     x--cs-to-ecma)
 	shift;
-	exec mono $monodocdir/cs2ecma.exe "$@"
+	exec @RUNTIME@ $monodocdir/cs2ecma.exe "$@"
 	exit 0
 	;;
     x--validate)
 	shift;
-	exec mono $monodocdir/validate.exe "$@"
+	exec @RUNTIME@ $monodocdir/validate.exe "$@"
 	;;
     x--help)
 	echo "Usage is:"
@@ -77,12 +77,12 @@
 esac
 
 if test `basename $0` = mod; then
-    mono --debug $monodocdir/mod.exe $1 | lynx -dump -stdin -force_html | ${PAGER:-more}
+    @RUNTIME@ @RDEBUG@ $monodocdir/mod.exe $1 | lynx -dump -stdin -force_html | ${PAGER:-more}
     exit
 fi
 
 if test -e $monodocdir/browser.exe; then
-    exec mono --debug $monodocdir/browser.exe $OPTIONS "$@" $REST
+    exec @RUNTIME@ @RDEBUG@ $monodocdir/browser.exe $OPTIONS "$@" $REST
 else
     echo "The monodoc GUI component is not installed. Install it from the mono-tools package."
 fi
